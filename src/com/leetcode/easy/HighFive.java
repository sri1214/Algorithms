package com.leetcode.easy;

import java.util.Arrays;

/**
 * 1086. High Five
 *
 * Given a list of scores of different students, return the average score of each student's top five scores in the order of each student's id.
 * Each entry items[i] has items[i][0] the student's id, and items[i][1] the student's score.  The average score is calculated using integer division.
 *
 * Example:
 * Input: [[1,91],[1,92],[2,93],[2,97],[1,60],[2,77],[1,65],[1,87],[1,100],[2,100],[2,76]]
 * Output: [[1,87],[2,88]]
 * Explanation:
 * The average of the student with id = 1 is 87.
 * The average of the student with id = 2 is 88.6. But with integer division their average converts to 88.
 *
 * Solution:
 * - Initialize an scores array of 1000 ( since the desc says max std ids are 1000
 * - Iterate thru input array
 *      - if the 1st score element of scores array with std id index is 0, then put it at 0. increment stdcnt
 *      - else replace the score with min score if score>min. (kind of like Priority Queue)
 * - Initialize sol array with stdcnt size
 * - Iterate thru scores array if the first score > 0, then calc avareage and insert into sol.
 */
public class HighFive {

    public static void main(String[] args) {
        HighFive hf = new HighFive();
        int[][] testCase = {{1,58},{1,16},{1,9},{1,35},{1,24},{1,95},{1,5},{1,42},{1,78},{1,58},{1,89},{1,74},{1,61},{1,27},{1,59},{1,43},{1,40},{1,53},{1,98},{1,38},{2,33},{2,41},{2,9},{2,12},{2,9},{2,13},{2,12},{2,63},{2,22},{2,12},{2,73},{2,81},{2,23},{2,97},{2,28},{2,91},{2,89},{2,1},{2,63},{2,29},{3,76},{3,17},{3,13},{3,1},{3,94},{3,93},{3,71},{3,24},{3,54},{3,2},{3,18},{3,50},{3,10},{3,74},{3,96},{3,25},{3,81},{3,76},{3,25},{3,18},{4,24},{4,50},{4,63},{4,8},{4,23},{4,25},{4,61},{4,94},{4,57},{4,87},{4,53},{4,76},{4,68},{4,85},{4,12},{4,1},{4,89},{4,80},{4,43},{4,56},{5,68},{5,66},{5,100},{5,67},{5,60},{5,95},{5,49},{5,83},{5,10},{5,68},{5,6},{5,51},{5,14},{5,13},{5,13},{5,27},{5,63},{5,12},{5,50},{5,5},{6,31},{6,87},{6,68},{6,49},{6,47},{6,78},{6,49},{6,71},{6,58},{6,94},{6,93},{6,6},{6,13},{6,7},{6,30},{6,23},{6,63},{6,69},{6,56},{6,52},{7,1},{7,23},{7,71},{7,6},{7,87},{7,100},{7,46},{7,76},{7,17},{7,35},{7,72},{7,69},{7,55},{7,62},{7,4},{7,44},{7,47},{7,89},{7,6},{7,12},{8,44},{8,39},{8,0},{8,33},{8,17},{8,69},{8,100},{8,0},{8,87},{8,19},{8,7},{8,90},{8,83},{8,2},{8,64},{8,70},{8,71},{8,20},{8,46},{8,55},{9,0},{9,88},{9,23},{9,57},{9,98},{9,37},{9,30},{9,99},{9,96},{9,6},{9,38},{9,6},{9,7},{9,6},{9,73},{9,61},{9,32},{9,12},{9,0},{9,73},{10,100},{10,96},{10,87},{10,15},{10,92},{10,56},{10,26},{10,58},{10,19},{10,56},{10,93},{10,23},{10,31},{10,52},{10,21},{10,74},{10,57},{10,12},{10,69},{10,80},{11,58},{11,19},{11,19},{11,30},{11,41},{11,80},{11,58},{11,58},{11,15},{11,27},{11,41},{11,41},{11,4},{11,48},{11,93},{11,10},{11,99},{11,24},{11,97},{11,36},{12,0},{12,13},{12,35},{12,52},{12,87},{12,4},{12,51},{12,3},{12,24},{12,19},{12,66},{12,30},{12,72},{12,73},{12,71},{12,0},{12,41},{12,19},{12,26},{12,67},{13,77},{13,13},{13,20},{13,21},{13,50},{13,45},{13,55},{13,57},{13,63},{13,64},{13,88},{13,92},{13,93},{13,60},{13,46},{13,27},{13,51},{13,72},{13,17},{13,96},{14,82},{14,30},{14,2},{14,68},{14,17},{14,31},{14,19},{14,22},{14,71},{14,100},{14,71},{14,78},{14,1},{14,31},{14,60},{14,98},{14,17},{14,4},{14,20},{14,43},{15,24},{15,51},{15,39},{15,62},{15,26},{15,71},{15,64},{15,31},{15,74},{15,92},{15,90},{15,26},{15,11},{15,9},{15,5},{15,74},{15,46},{15,29},{15,91},{15,22},{16,91},{16,69},{16,50},{16,57},{16,46},{16,64},{16,31},{16,91},{16,39},{16,97},{16,71},{16,30},{16,18},{16,58},{16,13},{16,1},{16,42},{16,1},{16,33},{16,65},{17,50},{17,2},{17,81},{17,91},{17,32},{17,88},{17,89},{17,50},{17,41},{17,50},{17,88},{17,41},{17,15},{17,55},{17,14},{17,81},{17,30},{17,27},{17,48},{17,100},{18,23},{18,52},{18,24},{18,80},{18,98},{18,30},{18,88},{18,78},{18,46},{18,33},{18,39},{18,2},{18,85},{18,18},{18,44},{18,68},{18,100},{18,50},{18,68},{18,83},{19,40},{19,91},{19,82},{19,21},{19,36},{19,78},{19,89},{19,82},{19,63},{19,75},{19,46},{19,27},{19,43},{19,70},{19,21},{19,31},{19,41},{19,74},{19,5},{19,15},{20,32},{20,28},{20,67},{20,47},{20,5},{20,80},{20,84},{20,23},{20,16},{20,90},{20,45},{20,67},{20,19},{20,83},{20,79},{20,3},{20,25},{20,93},{20,75},{20,69},{21,48},{21,75},{21,88},{21,34},{21,47},{21,90},{21,23},{21,80},{21,1},{21,18},{21,73},{21,61},{21,94},{21,61},{21,86},{21,32},{21,49},{21,91},{21,72},{21,47},{22,70},{22,10},{22,88},{22,100},{22,10},{22,38},{22,15},{22,98},{22,12},{22,14},{22,34},{22,7},{22,12},{22,21},{22,22},{22,13},{22,81},{22,39},{22,72},{22,25},{23,50},{23,92},{23,47},{23,60},{23,71},{23,39},{23,80},{23,56},{23,96},{23,50},{23,83},{23,76},{23,14},{23,65},{23,21},{23,66},{23,56},{23,99},{23,63},{23,41},{24,73},{24,41},{24,29},{24,7},{24,90},{24,34},{24,53},{24,30},{24,70},{24,2},{24,3},{24,30},{24,65},{24,61},{24,55},{24,4},{24,37},{24,73},{24,99},{24,61},{25,4},{25,43},{25,77},{25,82},{25,58},{25,6},{25,29},{25,48},{25,74},{25,55},{25,90},{25,10},{25,51},{25,1},{25,4},{25,31},{25,17},{25,11},{25,52},{25,7},{26,15},{26,91},{26,66},{26,19},{26,20},{26,23},{26,82},{26,78},{26,42},{26,24},{26,54},{26,96},{26,3},{26,30},{26,57},{26,66},{26,21},{26,55},{26,43},{26,31},{27,40},{27,91},{27,28},{27,22},{27,45},{27,79},{27,2},{27,80},{27,30},{27,54},{27,64},{27,57},{27,44},{27,78},{27,21},{27,39},{27,22},{27,95},{27,8},{27,21},{28,30},{28,21},{28,1},{28,100},{28,15},{28,81},{28,96},{28,73},{28,2},{28,16},{28,66},{28,51},{28,95},{28,14},{28,47},{28,49},{28,60},{28,29},{28,56},{28,61},{29,64},{29,93},{29,100},{29,52},{29,11},{29,61},{29,46},{29,56},{29,41},{29,28},{29,30},{29,1},{29,91},{29,57},{29,12},{29,74},{29,62},{29,7},{29,15},{29,21},{30,93},{30,90},{30,33},{30,81},{30,2},{30,15},{30,30},{30,73},{30,65},{30,59},{30,80},{30,6},{30,76},{30,63},{30,61},{30,66},{30,61},{30,77},{30,58},{30,21},{31,12},{31,60},{31,85},{31,44},{31,51},{31,19},{31,99},{31,42},{31,20},{31,95},{31,56},{31,31},{31,45},{31,53},{31,18},{31,24},{31,95},{31,16},{31,93},{31,26},{32,38},{32,79},{32,70},{32,2},{32,62},{32,26},{32,44},{32,42},{32,37},{32,64},{32,12},{32,64},{32,92},{32,19},{32,62},{32,63},{32,49},{32,80},{32,1},{32,10},{33,64},{33,23},{33,52},{33,82},{33,45},{33,54},{33,50},{33,8},{33,30},{33,41},{33,3},{33,54},{33,99},{33,9},{33,76},{33,83},{33,85},{33,35},{33,16},{33,24},{34,78},{34,75},{34,88},{34,22},{34,47},{34,27},{34,67},{34,69},{34,89},{34,64},{34,80},{34,95},{34,44},{34,67},{34,61},{34,1},{34,86},{34,10},{34,27},{34,46},{35,77},{35,2},{35,84},{35,75},{35,22},{35,17},{35,39},{35,79},{35,64},{35,1},{35,83},{35,44},{35,92},{35,4},{35,82},{35,52},{35,20},{35,70},{35,9},{35,81},{36,38},{36,10},{36,59},{36,83},{36,60},{36,27},{36,15},{36,55},{36,0},{36,82},{36,80},{36,43},{36,21},{36,1},{36,25},{36,27},{36,37},{36,46},{36,81},{36,21},{37,12},{37,48},{37,16},{37,93},{37,51},{37,97},{37,28},{37,98},{37,94},{37,16},{37,95},{37,32},{37,42},{37,94},{37,34},{37,42},{37,96},{37,65},{37,37},{37,53},{38,68},{38,18},{38,29},{38,14},{38,73},{38,21},{38,41},{38,85},{38,18},{38,92},{38,53},{38,2},{38,36},{38,99},{38,90},{38,14},{38,18},{38,92},{38,70},{38,71},{39,65},{39,80},{39,55},{39,44},{39,61},{39,52},{39,77},{39,5},{39,3},{39,20},{39,75},{39,25},{39,75},{39,2},{39,76},{39,73},{39,45},{39,5},{39,3},{39,16},{40,85},{40,69},{40,86},{40,74},{40,22},{40,76},{40,81},{40,67},{40,22},{40,51},{40,15},{40,8},{40,8},{40,16},{40,91},{40,53},{40,26},{40,0},{40,8},{40,66},{41,30},{41,2},{41,1},{41,15},{41,7},{41,48},{41,47},{41,11},{41,22},{41,19},{41,15},{41,65},{41,42},{41,91},{41,90},{41,82},{41,85},{41,13},{41,73},{41,66},{42,20},{42,77},{42,24},{42,96},{42,57},{42,56},{42,10},{42,49},{42,55},{42,20},{42,32},{42,79},{42,21},{42,91},{42,37},{42,77},{42,53},{42,7},{42,44},{42,58},{43,53},{43,17},{43,28},{43,66},{43,46},{43,65},{43,48},{43,96},{43,87},{43,29},{43,56},{43,39},{43,42},{43,6},{43,95},{43,47},{43,79},{43,66},{43,46},{43,2},{44,83},{44,65},{44,78},{44,15},{44,73},{44,82},{44,26},{44,63},{44,76},{44,78},{44,17},{44,69},{44,31},{44,12},{44,21},{44,28},{44,51},{44,28},{44,56},{44,36}};
        hf.highFive(testCase);
    }

    public int[][] highFive(int[][] items) {
        if(items==null||items.length<1) return null;
        int[][] topFive = new int[1000][5];
        int stdCnt = 0;
        for(int i=0;i<items.length;i++){
            int stdId = items[i][0];
            int score = items[i][1];
            if(topFive[stdId][0] > 0){
                insertScoreIntoTopFive(topFive[stdId], score);
            }
            else if(score>0){
                System.out.printf("stdId: %s, scores: %s, score: %s\n", stdId, Arrays.toString(topFive[stdId]), score);
                topFive[stdId][0] = score;
                stdCnt++;
            }
        }
        int[][] sol = new int[stdCnt][2];
        for(int i=1, j=0;i<topFive.length&&j<stdCnt;i++){
            if(topFive[i][0]>0){
                int avgScore = calcAverage(topFive[i]);
                sol[j][0] = i;
                sol[j][1] = avgScore;
                j++;
            }
        }
        return sol;
    }

    private int calcAverage(int[] scores){
        int sum = 0;
        for(int i=0;i<scores.length;i++){
            sum+=scores[i];
        }
        return sum/scores.length;
    }

    private void insertScoreIntoTopFive(int[] scores, int newScore){
        int min = scores[0];
        int minIndex = 0;
        for(int i=1;i<scores.length;i++){
            if(scores[i]<min){
                min = scores[i];
                minIndex=i;
            }
        }
        if(min<newScore) scores[minIndex] = newScore;
    }
}
